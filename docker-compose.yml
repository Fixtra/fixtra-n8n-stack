version: '3.7'
services:
  n8n:
    image: n8nio/n8n
    container_name: n8n
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    env_file:
      - .env
    volumes:
      - ./n8n_data:/home/node/.n8n
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - n8n-network
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  postgres:
    image: postgres:17
    container_name: n8n-postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DB_POSTGRES_PASS}
      - POSTGRES_DB=${DB_POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_POSTGRES_DB} -U ${DB_POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - n8n-network

  redis:
    image: redis:6-alpine
    container_name: n8n-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - n8n-network
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

networks:
  n8n-network:
    driver: bridge

volumes:
  postgres_data: