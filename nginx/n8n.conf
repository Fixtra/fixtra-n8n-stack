server {
    listen 443 ssl http2;
    server_name wizardengine.fixtra.io;
    
    # SSL configuration - paths look correct, but double-check these exist
    ssl_certificate /etc/letsencrypt/live/wizardengine.fixtra.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wizardengine.fixtra.io/privkey.pem;
    
    # Enhanced SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    
    # Security headers - global for the server
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Limit request size
    client_max_body_size 16M;
    
    # Global timeouts
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;
    
    # n8n main application
    location / {
        proxy_pass http://127.0.0.1:5678;
        
        # n8n specific CSP - properly formatted with semicolons between directives
        add_header Content-Security-Policy "default-src * 'self' data: blob:; script-src * 'self' 'unsafe-inline' 'unsafe-eval' cdn-rs.n8n.io ph.n8n.io; connect-src * 'self' wss://$host api.n8n.io; img-src * data: blob:; style-src * 'self' 'unsafe-inline'; font-src * data:; frame-src *;" always;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Disable buffering for real-time updates
        proxy_buffering off;
    }
    
    # Langfuse application at /langfuse path
    location /langfuse/ {
        # Langfuse specific CSP - fixed formatting
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; connect-src 'self' wss://$host; img-src 'self' data:; style-src 'self' 'unsafe-inline'; frame-src 'self' *;" always;
        
        proxy_pass http://127.0.0.1:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Base "/langfuse";
        
        # Appropriate timeouts
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        
        # Buffer settings
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Langfuse API
    location /langfuse/api/ {
        proxy_pass http://127.0.0.1:3000/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Langfuse static files
    location ~ ^/langfuse/_next/(.*)$ {
        proxy_pass http://127.0.0.1:3000/_next/$1;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Cache static files
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }
    
    # Logs
    access_log /var/log/nginx/wizardengine.access.log;
    error_log /var/log/nginx/wizardengine.error.log warn;
}

server {
    listen 80;
    server_name wizardengine.fixtra.io;
    return 301 https://$host$request_uri;
}